name: CI

on:
  push:

jobs:
  lint:
    uses: dvsa/.github/.github/workflows/nodejs-lint.yaml@v2

  test:
    uses: dvsa/.github/.github/workflows/nodejs-test.yaml@v2

  security:
    uses: dvsa/.github/.github/workflows/nodejs-security.yaml@v2
    with:
      args: --all-projects
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-names:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.sha.outputs.SHORT_SHA }}
      pretty_branch_name: ${{ steps.branch.outputs.NAME }}
    steps:
      - uses: actions/checkout@v3
      - name: Set short sha output
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short=11 HEAD)" >> $GITHUB_OUTPUT
      - name: Set pretty branch name output
        id: branch
        run: |
          export PRETTY_BRANCH_NAME=$(tr '/' '-' <<< ${{ github.ref_name }})
          echo "NAME=${PRETTY_BRANCH_NAME}" >> $GITHUB_OUTPUT

  build:
    uses: dvsa/.github/.github/workflows/nodejs-build.yaml@v2
    with:
      upload_artifact: true

  lambdas:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.json.outputs.MATRIX }}
    steps:
      - uses: actions/checkout@v3
      - name: Read in lambdas names from JSON
        id: json
        run: |
          echo "MATRIX=$(jq -c . < ./lambdas.json)" >> $GITHUB_OUTPUT

  upload-s3:
    needs: [ lint, test, build, build-names, lambdas ]
    strategy:
      matrix:
        lambdaName: ${{ fromJSON(needs.lambdas.outputs.matrix).lambdas }}
    uses: dvsa/.github/.github/workflows/upload-to-s3.yaml@v2
    with:
      environment: nonprod
      short_commit: ${{ needs.build-names.outputs.short_sha }}
      artifact: ${{ matrix.lambdaName }}.zip
      bucket_key: backend/${{ matrix.lambdaName }}/${{ needs.build-names.outputs.pretty_branch_name }}.zip
    permissions:
      id-token: write
    secrets:
      AWS_ACCOUNT: ${{ secrets.RSP_AWS_ACCOUNT }}
      AWS_REGION: ${{ secrets.RSP_AWS_REGION }}
      BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

  update-lambda-code:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    uses: dvsa/.github/.github/workflows/update-lambda-function.yaml@v2.2
    needs: [ build-names, build, upload-s3, lambdas ]
    strategy:
      matrix:
        lambdaName: ${{ fromJSON(needs.lambdas.outputs.matrix).lambdas }}
    with:
      environment: nonprod
      lambda_function_name: rsp-nonprod-apis-backend-${{ matrix.lambdaName }}
      bucket_key: backend/${{ matrix.lambdaName }}/${{ needs.build-names.outputs.pretty_branch_name }}.zip
    permissions:
      id-token: write
    secrets:
      AWS_ACCOUNT: ${{ secrets.RSP_AWS_ACCOUNT }}
      AWS_REGION: ${{ secrets.RSP_AWS_REGION }}
      BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
